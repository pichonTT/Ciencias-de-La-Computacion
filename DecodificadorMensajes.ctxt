#BlueJ class context
comment0.target=DecodificadorMensajes
comment0.text=\r\n\ Clase\ DecodificadorMensajes\:\ representa\ una\ componente\ capaz\ de\ descifrar\r\n\ un\ mensaje\ en\ formato\ texto,\ dado\ el\ mensaje\ y\ el\ c\u00F3digo\ usado\ para\ la\ \r\n\ encripci\u00F3n.\ El\ mensaje\ a\ descifrar/decodificar\ debe\ ser\ un\ objeto\r\n\ de\ tipo\ Mensaje\ (b\u00E1sicamente,\ una\ lista\ de\ strings,\ donde\ cada\ string\r\n\ representa\ una\ l\u00EDnea).\ Se\ asume\ que\ el\ mensaje\ es\ ASCII,\ es\ decir,\ todos\r\n\ los\ caracteres\ del\ mensaje\ tienen\ c\u00F3digos\ en\ el\ rango\ [0,\ 127].\r\n\ \r\n\ La\ codificaci\u00F3n/decodificaci\u00F3n\ utiliza\ una\ variante\ de\ Cifrado\ Cesar,\ en\ \r\n\ el\ cual\ el\ desplazamiento\ se\ basa\ en\ una\ c\u00F3digo\ de\ encripci\u00F3n\ m\u00FAltiple.\ \r\n\ V\u00E9ase\ Cifrado\ de\ Vigen\u00E8re\ para\ m\u00E1s\ detalles.\r\n\ \r\n\ @author\ N.\ Aguirre\r\n\ @version\ 0.1\r\n
comment1.params=msg\ codigo
comment1.target=DecodificadorMensajes(Mensaje,\ int[])
comment1.text=\r\n\ Constructor\ de\ la\ clase\ DecodificadorMensajes.\r\n\ Inicializa\ el\ mensaje\ a\ desencriptar/decodificar\ con\ el\ par\u00E1metro\ pasado,\ \r\n\ junto\ con\ el\ c\u00F3digo\ de\ desencripci\u00F3n.\ \r\n\ Precondici\u00F3n\:\ tanto\ el\ mensaje\ msg\ como\ el\ c\u00F3digo\ codigo\ no\ pueden\ ser\ nulos\r\n\ @param\ msg\ es\ el\ mensaje\ a\ desencriptar.\r\n\ @param\ codigo\ es\ el\ c\u00F3digo\ de\ desencripci\u00F3n.\r\n
comment2.params=
comment2.target=void\ decodificarMensaje()
comment2.text=\r\n\ Desencripta\ el\ mensaje.\ El\ mensaje\ no\ debe\ estar\ desencriptado.\r\n\ Precondici\u00F3n\:\ El\ mensaje\ a\u00FAn\ no\ fue\ descifrado\ (i.e.,\ el\ campo\ \r\n\ mensajeDecodificado\ es\ null).\r\n
comment3.params=
comment3.target=Mensaje\ obtenerMensajeDecodificado()
comment3.text=\r\n\ Retorna\ el\ mensaje\ ya\ decodificado/descifrado.\r\n\ Precondici\u00F3n\:\ el\ mensaje\ debe\ haber\ sido\ decodificado\ previamente\ (i.e.,\ \r\n\ se\ debe\ haber\ llamado\ a\ decodificarMensaje()).\r\n\ Postcondicion\:\ se\ retorna\ el\ mensaje\ descifrado/decodificado.\r\n\ @return\ el\ mensaje\ descifrado.\r\n
comment4.params=str\ codigo
comment4.target=java.lang.String\ desencriptarCadena(java.lang.String,\ int[])
comment4.text=\r\n\ Desencripta\ una\ cadena,\ dado\ un\ c\u00F3digo\ num\u00E9rico.\ Se\ usan\ los\ d\u00EDgitos\ del\ c\u00F3digo\r\n\ para\ reemplazar\ cada\ caracter\ de\ la\ cadena\ por\ el\ caracter\ correspondiente\ a\ \r\n\ "trasladar"\ el\ mismo\ el\ n\u00FAmero\ de\ lugares\ que\ indica\ el\ c\u00F3digo,\ en\ sentido\ inverso\r\n\ al\ de\ encripci\u00F3n\ (es\ decir,\ se\ resta\ el\ c\u00F3digo\ al\ caracter).\ El\ c\u00F3digo\ tiene\r\n\ m\u00FAltiples\ valores\:\ se\ usa\ el\ primero\ para\ el\ primer\ caracter,\ el\ segundo\ para\ el\ \r\n\ segundo,\ y\ as\u00ED\ sucesivamente.\ Si\ se\ agota\ el\ c\u00F3digo,\ se\ vuelve\ al\ comienzo\ del\ mismo,\ \r\n\ hasta\ desencriptar\ toda\ la\ cadena.\r\n\ Precondici\u00F3n\:\ tanto\ str\ como\ codigo\ no\ deben\ ser\ nulos.\r\n\ @param\ str\ es\ la\ cadena\ a\ desencriptar\r\n\ @param\ codigo\ es\ el\ c\u00F3digo\ a\ utilizar\ para\ la\ desencripci\u00F3n\r\n
numComments=5
